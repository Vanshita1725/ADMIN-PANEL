import React, { useState } from "react";
import Sidebar from "./Sidebar";
import Header from "./Header";

const issues = [
  {
    icon: "!",
    color: "#dba617",
    text: "The optional module, imagick, is not installed, or has been disabled."
  },
  {
    icon: "!",
    color: "#dba617",
    text: "The optional module, zip, is not installed, or has been disabled."
  },
  {
    icon: "âœ—",
    color: "#dc3232",
    text: "The required module, gd, is not installed, or has been disabled."
  },
  {
    icon: "!",
    color: "#dba617",
    text: "The optional module, intl, is not installed, or has been disabled."
  },
];

const siteInfo = {
  "Version": "6.8.1 (Latest version: 6.8.2)",
  "Site Language": "en_US",
  "User Language": "en_US",
  "Timezone": "+00:00",
  "Home URL": "http://localhost/wordpress",
  "Site URL": "http://localhost/wordpress",
  "Permalink structure": "/index.php/%year%/%monthnum%/%day%/%postname%/",
  "Is this site using HTTPS?": "No",
  "Is this a multisite?": "No",
  "Can anyone register on this site?": "No",
  "Is this site discouraging search engines?": "No",
  "Default comment status": "Open",
  "Environment type": "production",
  "User count": "1",
  "Communication with WordPress.org": "WordPress.org is reachable"
};

const directoriesInfo = {
  "WordPress directory location": "C:\\xampp\\htdocs\\wordpress",
  "WordPress directory size": "57.55 MB",
  "Uploads directory location": "C:\\xampp\\htdocs\\wordpress/wp-content/uploads",
  "Uploads directory size": "376.45 KB",
  "Themes directory location": "C:\\xampp\\htdocs\\wordpress/wp-content/themes",
  "Themes directory size": "13.56 MB",
  "Plugins directory location": "C:\\xampp\\htdocs\\wordpress/wp-content/plugins",
  "Plugins directory size": "510.46 KB",
  "Fonts directory location": "C:\\xampp\\htdocs\\wordpress/wp-content/uploads/fonts",
  "Fonts directory size": "The directory does not exist.",
  "Database size": "1.72 MB",
  "Total installation size": "73.70 MB"
};

const activeThemeInfo = {
  "Name": "Twenty Twenty-Five (twentytwentyfive)",
  "Version": "1.2",
  "Author": "the WordPress team",
  "Author website": "https://wordpress.org",
  "Parent theme": "None",
  "Theme features": "core-block-patterns, post-thumbnails, responsive-embeds, editor-styles, html5, automatic-feed-links, widgets-block-editor, block-templates, post-formats, editor-style",
  "Theme directory location": "C:\\xampp\\htdocs\\wordpress/wp-content/themes/twentytwentyfive",
  "Auto-updates": "Disabled"
};

const inactiveThemes = [
  {
    name: "Twenty Twenty-Four (twentytwentyfour)",
    details: "Version 1.3 by the WordPress team | Auto-updates disabled"
  },
  {
    name: "Twenty Twenty-Three (twentytwentythree)",
    details: "Version 1.6 by the WordPress team | Auto-updates disabled"
  }
];

const activePlugins = [
  {
    name: "Classic Editor",
    details: "Version 1.6.7 by WordPress Contributors | Auto-updates disabled"
  }
];

const inactivePlugins = [
  {
    name: "Akismet Anti-spam: Spam Protection",
    details: "Version 5.3.7 by Automattic - Anti-spam Team (Latest version: 5.4) | Auto-updates disabled"
  },
  {
    name: "Classic Editor +",
    details: 'Version 4.4.1 by <a href="https://so-wp.com">Pieter Bos</a>, <a href="https://gschoppe.com">Greg Schoppe</a> | Auto-updates disabled'
  },
  {
    name: "Hello Dolly",
    details: "Version 1.7.2 by Matt Mullenweg | Auto-updates disabled"
  }
];

const mediaHandling = {
  "Active editor": "",
  "ImageMagick version number": "Not available",
  "ImageMagick version string": "Not available",
  "Imagick version": "Not available",
  "File uploads": "Enabled",
  "Max size of post data allowed": "40M",
  "Max size of an uploaded file": "40M",
  "Max effective file size": "40 MB",
  "Max simultaneous file uploads": "20",
  "GD version": "Not available",
  "Ghostscript version": "Not available"
};

const serverInfo = {
  "Server architecture": "Windows NT 10.0 AMD64",
  "Web server": "Apache/2.4.58 (Win64) OpenSSL/3.1.3 PHP/8.2.12",
  "PHP version": "8.2.12 (Supports 64bit values)",
  "PHP SAPI": "apache2handler",
  "PHP max input variables": "1000",
  "PHP time limit": "120",
  "PHP memory limit": "512M",
  "Max input time": "60",
  "Upload max filesize": "40M",
  "PHP post max size": "40M",
  "cURL version": "8.4.0 OpenSSL/3.1.3",
  "Is SUHOSIN installed?": "No",
  "Is the Imagick library available?": "No",
  "Are pretty permalinks supported?": "Yes",
  ".htaccess rules": "Your .htaccess file contains only core WordPress features.",
  "robots.txt": "Your site is using the dynamic robots.txt file which is generated by WordPress.",
  "Current time": "2025-07-15T16:24:49+00:00",
  "Current UTC time": "Tuesday, 15-Jul-25 16:24:49 UTC",
  "Current Server time": "2025-07-15T16:24:45+00:00"
};

const databaseInfo = {
  "Database Extension": "mysqli",
  "Server version": "10.4.32-MariaDB",
  "Client version": "mysqlnd 8.2.12",
  "Database username": "root",
  "Database host": "localhost",
  "Database name": "wordpress",
  "Table prefix": "wp_",
  "Database charset": "utf8mb4",
  "Database collation": "utf8mb4_unicode_520_ci",
  "Max allowed packet size": "1048576",
  "Max connections number": "151"
};

const wpConstants = {
  "ABSPATH": "C:\\xampp\\htdocs\\wordpress/",
  "WP_HOME": "Undefined",
  "WP_SITEURL": "Undefined",
  "WP_CONTENT_DIR": "C:\\xampp\\htdocs\\wordpress/wp-content",
  "WP_PLUGIN_DIR": "C:\\xampp\\htdocs\\wordpress/wp-content/plugins",
  "WP_MEMORY_LIMIT": "40M",
  "WP_MAX_MEMORY_LIMIT": "512M",
  "WP_DEBUG": "Disabled",
  "WP_DEBUG_DISPLAY": "Enabled",
  "WP_DEBUG_LOG": "Disabled",
  "SCRIPT_DEBUG": "Disabled",
  "WP_CACHE": "Disabled",
  "CONCATENATE_SCRIPTS": "Undefined",
  "COMPRESS_SCRIPTS": "Undefined",
  "COMPRESS_CSS": "Undefined",
  "WP_ENVIRONMENT_TYPE": "Undefined",
  "WP_DEVELOPMENT_MODE": "Disabled",
  "DB_CHARSET": "utf8mb4",
  "DB_COLLATE": "Empty value"
};

const fsPermissions = [
  { dir: "The main WordPress directory", status: "Writable" },
  { dir: "The wp-content directory", status: "Writable" },
  { dir: "The uploads directory", status: "Writable" },
  { dir: "The plugins directory", status: "Writable" },
  { dir: "The themes directory", status: "Writable" },
  { dir: "The fonts directory", status: "Does not exist" }
];

function formatSiteInfo(info) {
  return Object.entries(info)
    .map(([key, value]) => `${key}: ${value}`)
    .join('\n');
}

export default function SiteHealth() {
  const [tab, setTab] = useState("status");
  const [open, setOpen] = useState(true);
  const [openRec, setOpenRec] = useState(true);
  const [openTheme, setOpenTheme] = useState(true);
  const [openPHP, setOpenPHP] = useState(true);
  const [openSQL, setOpenSQL] = useState(true);
  const [openHTTPS, setOpenHTTPS] = useState(true);
  const [showPassed, setShowPassed] = useState(true);
  const [openWP, setOpenWP] = useState(true);
  const [openTZ, setOpenTZ] = useState(true);
  const [openPHPsession, setOpenPHPsession] = useState(true);
  const [openSecureComm, setOpenSecureComm] = useState(true);
  const [openScheduled, setOpenScheduled] = useState(true);
  const [openHTTP, setOpenHTTP] = useState(true);
  const [openREST, setOpenREST] = useState(true);
  const [openDebug, setOpenDebug] = useState(true);
  const [openFiles, setOpenFiles] = useState(true);
  const [openAutoUpdates, setOpenAutoUpdates] = useState(true);
  const [openDisk, setOpenDisk] = useState(true);
  const [openAutoload, setOpenAutoload] = useState(true);
  const [openObjectCache, setOpenObjectCache] = useState(true);
  const [openWPorg, setOpenWPorg] = useState(true);
  const [openBackground, setOpenBackground] = useState(true);
  const [openLoopback, setOpenLoopback] = useState(true);
  const [openAuthHeader, setOpenAuthHeader] = useState(true);
  const [wpInfoOpen, setWpInfoOpen] = useState(true);
  const [dirInfoOpen, setDirInfoOpen] = useState(true);
  const [themeInfoOpen, setThemeInfoOpen] = useState(true);
  const [inactiveThemesOpen, setInactiveThemesOpen] = useState(true);
  const [activePluginsOpen, setActivePluginsOpen] = useState(true);
  const [inactivePluginsOpen, setInactivePluginsOpen] = useState(true);
  const [mediaHandlingOpen, setMediaHandlingOpen] = useState(true);
  const [serverInfoOpen, setServerInfoOpen] = useState(true);
  const [databaseInfoOpen, setDatabaseInfoOpen] = useState(true);
  const [wpConstantsOpen, setWpConstantsOpen] = useState(true);
  const [fsPermissionsOpen, setFsPermissionsOpen] = useState(true);

  const handleCopy = () => {
    navigator.clipboard.writeText(formatSiteInfo(siteInfo));
  };

  return (
    <div className="min-h-screen bg-[#f6f7f7]  flex-col">
      <Header />
      <div className="flex flex-col md:flex-row flex-1 w-full max-w-8xl mx-auto py-2 gap-6">
        <div className="w-full md:w-[260px] mb-6 md:mb-0 flex-shrink-0">
          <Sidebar />
        </div>
        <main className="flex flex-col mt-7 w-full items-center lg:ml-46">
          <div className="bg-white flex w-full border-b border-gray-200 flex flex-col items-center">
            <h1 className="!text-2xl font-medium text-gray-900 pt-3 mb-6 mt-2">Site Health</h1>
            <div className="flex flex-col bg-white items-center  mb-8">
              <div className="flex items-center gap-2 mb-2">
                <span className="inline-flex items-center  justify-center w-5 h-5 rounded-full border-1 !border-[#dba617]" style={{ background: 'white' }}>
                </span>
                <span className="text-base font-medium text-gray-900">Should be improved</span>
              </div>
              <div className="flex border-b border-gray-300 w-full max-w-xs">
                <button
                  className={`px-6 py-2 text-base font-medium focus:outline-none ${tab === "status" ? "text-gray-900 border-b-2 border-[#2271b1]" : "text-gray-500"}`}
                  onClick={() => setTab("status")}
                >
                  Status
                </button>
                <button
                  className={`px-6 py-2 text-base font-medium focus:outline-none ${tab === "info" ? "text-gray-900 border-b-2 border-[#2271b1]" : "text-gray-500"}`}
                  onClick={() => setTab("info")}
                >
                  Info
                </button>
              </div>
            </div>
          </div>
          {tab === "status" ? (
            <>
              {/* Status Tab Content */}
              <div className="  max-w-4xl bg-[#f6f7f7] rounded p-8 mb-8">
                <div className="!text-lg font-semibold text-gray-900 mb-2">Site Health Status</div>
                <div className="text-gray-500 !text-sm mb-6">The site health check shows information about your WordPress configuration and items that may need your attention.</div>
                <div className="!text-md !font-medium text-gray-700 mb-1">1 critical issues</div>
                <div className="text-gray-500 !text-xs !font-normal mb-4">Critical issues are items that may have a high impact on your sites performance or security, and resolving these issues should be prioritized.</div>

                {/* Critical Issues Section */}
                <div className="bg-white border border-gray-300  mb-2">
                  <div className="flex items-center justify-between px-3 py-3 cursor-pointer select-none" onClick={() => setOpen(o => !o)}>
                    <div className="font-medium !text-sm text-gray-900">One or more required modules are missing</div>
                    <div className="flex items-center gap-2">
                      <span className=" border-1 border-blue-600 text-gray-900 !text-xs font-semibold px-3 py-1 ">Performance</span>
                      <button className="ml-2" aria-label="Toggle details">
                        <svg className={`w-5 h-5 transition-transform ${open ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                        </svg>
                      </button>
                    </div>
                  </div>
                  {open && (
                    <div className="px-6 pb-6 text-gray-800 text-sm">
                      <div className="mb-3">PHP modules perform most of the tasks on the server that make your site run. Any changes to these must be made by your server administrator.</div>
                      <div className="mb-3">
                        The WordPress Hosting Team maintains a list of those modules, both recommended and required, in{' '}
                        <a href="#" className="text-[#2271b1] underline hover:text-[#135e96]" target="_blank" rel="noopener noreferrer">
                          the team handbook
                          <svg className="inline w-3 h-3 ml-0.5 -mt-0.5" fill="none" stroke="#2271b1" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M14 3h7v7m0-7L10 14m-7 7h7v-7" />
                          </svg>
                        </a>.
                      </div>
                      <ul className="space-y-1">
                        {issues.map((issue, i) => (
                          <li key={i} className="flex items-center gap-2 text-sm">
                            <span className="inline-flex items-center justify-center w-4 h-4 rounded-full border" style={{ color: issue.color, borderColor: issue.color }}>
                              <span className="text-xs font-bold" style={{ color: issue.color }}>{issue.icon}</span>
                            </span>
                            <span>{issue.text}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  )}
                </div>

                {/* Recommended Improvements Section */}
                <div className="mt-10">
                  <div className="!text-md font-medium text-gray-900 mb-1">6 recommended improvements</div>
                  <div className="text-gray-500 !text-sm mb-4">Recommended items are considered beneficial to your site, although not as important to prioritize as a critical issue, they may include improvements to things such as; Performance, user experience, and more.</div>

                  {/* Plugins Recommendation */}
                  <div className="border-1 border-gray-300">
                  <div className="bg-white border-b border-gray-300 ">
                    <div className="flex items-center justify-between px-6 py-3 cursor-pointer select-none" onClick={() => setOpenRec(o => !o)}>
                      <div className="font-normal !text-sm text-gray-900">You should remove inactive plugins</div>
                      <div className="flex items-center gap-2">
                        <span className="border-1 border-blue-600 text-gray-900 !text-xs font-Normal px-3 py-1 ">Security</span>
                        <button className="ml-2" aria-label="Toggle details">
                          <svg className={`w-5 h-5 transition-transform ${openRec ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                    </div>
                    {openRec && (
                      <div className="px-6 pb-6 text-gray-800 text-sm">
                        <div className="mb-3">Plugins extend your site's functionality with things like contact forms, ecommerce and much more. That means they have deep access to your site, so it's vital to keep them up to date.</div>
                        <div className="mb-3">Your site has 1 plugin waiting to be updated.</div>
                        <div className="mb-3">Your site has 3 inactive plugins. Inactive plugins are tempting targets for attackers. If you are not going to use a plugin, you should consider removing it.</div>
                        <div className="flex flex-col gap-1 mt-2">
                          <a href="#" className="text-[#2271b1] underline hover:text-[#135e96] w-fit">Manage your plugins</a>
                          <a href="#" className="text-[#2271b1] underline hover:text-[#135e96] w-fit">Update your plugins</a>
                          <a href="#" className="text-[#2271b1] underline hover:text-[#135e96] w-fit">Manage inactive plugins</a>
                        </div>
                      </div>
                    )}
                  </div>

                  {/* Themes Recommendation */}
                  <div className="bg-white border-b border-gray-300 ">
                    <div className="flex items-center justify-between px-6 py-3 cursor-pointer select-none" onClick={() => setOpenTheme(o => !o)}>
                      <div className="font-normal !text-sm text-gray-900">You should remove inactive themes</div>
                      <div className="flex items-center gap-2">
                        <span className="border-1 border-blue-500 text-gray-900 text-xs font-semibold px-3 py-1">Security</span>
                        <button className="ml-2" aria-label="Toggle details">
                          <svg className={`w-5 h-5 transition-transform ${openTheme ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                    </div>
                    {openTheme && (
                      <div className="px-6 pb-6 text-gray-800 !text-sm">
                        <div className="mb-3 !text-sm">Themes add your site's look and feel. It's important to keep them up to date, to stay consistent with your brand and keep your site secure.</div>
                        <div className="mb-3 !text-sm">Your site has 3 installed themes, and they are all up to date.</div>
                        <div className="mb-3 !text-xs">Your site has 2 inactive themes, other than Twenty Twenty-Five, your active theme. You should consider removing any unused themes to enhance your site's security.</div>
                        <div className="flex flex-col gap-1 mt-2">
                          <a href="#" className="text-[#2271b1] underline hover:text-[#135e96] w-fit">Manage your themes</a>
                        </div>
                      </div>
                    )}
                  </div>

                  {/* PHP Version Recommendation */}
                  <div className="bg-white border-b border-gray-300 ">
                    <div className="flex items-center justify-between px-6 py-3 cursor-pointer select-none" onClick={() => setOpenPHP(o => !o)}>
                      <div className="font-normal !text-sm text-gray-900">Your site is running on an older version of PHP (8.2.12), which should be updated</div>
                      <div className="flex items-center gap-2">
                        <span className=" border-1 border-blue-500 text-gray-900 !text-xs font-semibold px-3 py-1">Performance</span>
                        <button className="ml-2" aria-label="Toggle details">
                          <svg className={`w-5 h-5 transition-transform ${openPHP ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                    </div>
                    {openPHP && (
                      <div className="px-6 pb-6 text-gray-800 text-sm">
                        <div className="mb-3">PHP is one of the programming languages used to build WordPress. Newer versions of PHP receive regular security updates and may increase your site's performance. The minimum recommended version of PHP is 8.3.</div>
                        <div className="flex flex-col gap-1 mt-2">
                          <a href="#" className="text-[#2271b1] underline hover:text-[#135e96] w-fit" target="_blank" rel="noopener noreferrer">
                            Learn more about updating PHP
                            <svg className="inline w-3 h-3 ml-0.5 -mt-0.5" fill="none" stroke="#2271b1" strokeWidth={2} viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M14 3h7v7m0-7L10 14m-7 7h7v-7" />
                            </svg>
                          </a>
                        </div>
                      </div>
                    )}
                  </div>

                  {/* SQL Server Recommendation */}
                  <div className="bg-white border-b border-gray-300 ">
                    <div className="flex items-center justify-between px-6 py-3 cursor-pointer select-none" onClick={() => setOpenSQL(o => !o)}>
                      <div className="font-normal !text-sm text-gray-900">Outdated SQL server</div>
                      <div className="flex items-center gap-2">
                        <span className=" border-1 border-blue-500 text-gray-900 text-xs font-semibold px-3 py-1 ">Performance</span>
                        <button className="ml-2" aria-label="Toggle details">
                          <svg className={`w-5 h-5 transition-transform ${openSQL ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                    </div>
                    {openSQL && (
                      <div className="px-6 pb-6 text-gray-800 text-sm">
                        <div className="mb-3">The SQL server is a required piece of software for the database WordPress uses to store all your site's content and settings.</div>
                        <div className="mb-3">For optimal performance and security reasons, you should consider running MariaDB version 10.5 or higher. Contact your web hosting company to correct this.</div>
                        <div className="flex flex-col gap-1 mt-2">
                          <a href="#" className="text-[#2271b1] underline hover:text-[#135e96] w-fit" target="_blank" rel="noopener noreferrer">
                            Learn more about what WordPress requires to run.
                            <svg className="inline w-3 h-3 ml-0.5 -mt-0.5" fill="none" stroke="#2271b1" strokeWidth={2} viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M14 3h7v7m0-7L10 14m-7 7h7v-7" />
                            </svg>
                          </a>
                        </div>
                      </div>
                    )}
                  </div>

                  {/* HTTPS Recommendation */}
                  <div className="bg-white border-b border-gray-300 ">
                    <div className="flex items-center justify-between px-6 py-3 cursor-pointer select-none" onClick={() => setOpenHTTPS(o => !o)}>
                      <div className="font-normal !text-sm text-gray-900">Your website does not use HTTPS</div>
                      <div className="flex items-center gap-2">
                        <span className=" border-1 border-blue-500 text-gray-900 text-xs font-semibold px-3 py-1 ">Security</span>
                        <button className="ml-2" aria-label="Toggle details">
                          <svg className={`w-5 h-5 transition-transform ${openHTTPS ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                    </div>
                    {openHTTPS && (
                      <div className="px-6 pb-6 text-gray-800 text-sm">
                        <div className="mb-3">Your <a href="#" className="text-[#2271b1] underline hover:text-[#135e96]">WordPress Address</a> and <a href="#" className="text-[#2271b1] underline hover:text-[#135e96]">Site Address</a> are not set up to use HTTPS.</div>
                        <div className="mb-3">Talk to your web host about supporting HTTPS for your website.</div>
                        <div className="flex flex-col gap-1 mt-2">
                          <a href="#" className="text-[#2271b1] underline hover:text-[#135e96] w-fit" target="_blank" rel="noopener noreferrer">
                            Learn more about why you should use HTTPS
                            <svg className="inline w-3 h-3 ml-0.5 -mt-0.5" fill="none" stroke="#2271b1" strokeWidth={2} viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M14 3h7v7m0-7L10 14m-7 7h7v-7" />
                            </svg>
                          </a>
                        </div>
                      </div>
                    )}
                  </div>
                  </div>

                  {/* Passed Tests Section */} 
                  <div className="flex flex-1 items-center justify-center mt-12 mb-2">
                  <button
                      className="border border-[#2271b1] text-[#2271b1] px-4 py-1.5 rounded hover:bg-blue-50 text-sm font-medium flex items-center gap-1"
                      onClick={() => setShowPassed(s => !s)}
                      type="button"
                    >
                      Passed tests
                      <svg className={`w-4 h-4 transition-transform ${showPassed ? '' : 'rotate-180'}`} fill="none" stroke="#2271b1" strokeWidth={2} viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                      </svg>
                    </button>
                    </div>
                  

                  {showPassed && (
                    
                    <div className="space-y-2">
                      <div className="flex items-center justify-between mt-12 mb-2">
                    <div className="text-lg font-semibold text-gray-900">18 items with no issues detected</div>
                   
                  </div>
                      {/* WordPress Version Passed Test */}
                      <div className="bg-white border border-gray-300 rounded">
                        <div className="flex items-center justify-between px-6 py-4 cursor-pointer select-none" onClick={() => setOpenWP(o => !o)}>
                          <div className="font-semibold text-gray-900">Your version of WordPress (6.8.1) is up to date</div>
                          <div className="flex items-center gap-2">
                            <span className="bg-gray-100 border border-gray-300 text-gray-900 text-xs font-semibold px-3 py-1 rounded">Performance</span>
                            <button className="ml-2" aria-label="Toggle details">
                              <svg className={`w-5 h-5 transition-transform ${openWP ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                              </svg>
                            </button>
                          </div>
                        </div>
                        {openWP && (
                          <div className="px-6 pb-6 text-gray-800 text-sm">
                            You are currently running the latest version of WordPress available, keep it up!
                          </div>
                        )}
                      </div>

                      {/* 4. Secure Communication Passed Test */}
                      <div className="bg-white border border-gray-300 rounded">
                        <div className="flex items-center justify-between px-6 py-4 cursor-pointer select-none" onClick={() => setOpenSecureComm(o => !o)}>
                          <div className="font-semibold text-gray-900">Your site can communicate securely with other services</div>
                          <div className="flex items-center gap-2">
                            <span className="bg-gray-100 border border-gray-300 text-gray-900 text-xs font-semibold px-3 py-1 rounded">Security</span>
                            <button className="ml-2" aria-label="Toggle details">
                              <svg className={`w-5 h-5 transition-transform ${openSecureComm ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                              </svg>
                            </button>
                          </div>
                        </div>
                        {openSecureComm && (
                          <div className="px-6 pb-6 text-gray-800 text-sm">
                            Securely communicating between servers is needed for transactions such as fetching files, conducting sales on store sites, and much more.
                          </div>
                        )}
                      </div>

                    {/* 3. No PHP sessions detected Passed Test */}
                  

                      {/* Timezone Passed Test */}
                      <div className="bg-white border border-gray-300 rounded">
                        <div className="flex items-center justify-between px-6 py-4 cursor-pointer select-none" onClick={() => setOpenTZ(o => !o)}>
                          <div className="font-semibold text-gray-900">PHP default timezone is valid</div>
                          <div className="flex items-center gap-2">
                            <span className="bg-gray-100 border border-gray-300 text-gray-900 text-xs font-semibold px-3 py-1 rounded">Performance</span>
                            <button className="ml-2" aria-label="Toggle details">
                              <svg className={`w-5 h-5 transition-transform ${openTZ ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                              </svg>
                            </button>
                          </div>
                        </div>
                        {openTZ && (
                          <div className="px-6 pb-6 text-gray-800 text-sm">
                            PHP default timezone was configured by WordPress on loading. This is necessary for correct calculations of dates and times.
                          </div>
                        )}
                      </div>


                     <div className="bg-white border border-gray-300 rounded">
                      <div className="flex items-center justify-between px-6 py-4 cursor-pointer select-none" onClick={() => setOpenPHPsession(o => !o)}>
                        <div className="font-semibold text-gray-900">No PHP sessions detected</div>
                        <div className="flex items-center gap-2">
                          <span className="bg-gray-100 border border-gray-300 text-gray-900 text-xs font-semibold px-3 py-1 rounded">Performance</span>
                          <button className="ml-2" aria-label="Toggle details">
                            <svg className={`w-5 h-5 transition-transform ${openPHPsession ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                            </svg>
                          </button>
                        </div>
                      </div>
                      {openPHPsession && (
                        <div className="px-6 pb-6 text-gray-800 text-sm">
                          PHP sessions created by a <code>session_start()</code> function call may interfere with REST API and loopback requests. An active session should be closed by <code>session_write_close()</code> before making any HTTP requests.
                        </div>
                      )}
                    </div>

                    {/* 5. Scheduled Events Passed Test */}
                    <div className="bg-white border border-gray-300 rounded">
                      <div className="flex items-center justify-between px-6 py-4 cursor-pointer select-none" onClick={() => setOpenScheduled(o => !o)}>
                        <div className="font-semibold text-gray-900">Scheduled events are running</div>
                        <div className="flex items-center gap-2">
                          <span className="bg-gray-100 border border-gray-300 text-gray-900 text-xs font-semibold px-3 py-1 rounded">Performance</span>
                          <button className="ml-2" aria-label="Toggle details">
                            <svg className={`w-5 h-5 transition-transform ${openScheduled ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                            </svg>
                          </button>
                        </div>
                      </div>
                      {openScheduled && (
                        <div className="px-6 pb-6 text-gray-800 text-sm">
                          Scheduled events are what periodically looks for updates to plugins, themes and WordPress itself. It is also what makes sure scheduled posts are published on time. It may also be used by various plugins to make sure that planned actions are executed.
                        </div>
                      )}
                    </div>

                    {/* 6. HTTP Requests Passed Test */}
                    <div className="bg-white border border-gray-300 rounded">
                      <div className="flex items-center justify-between px-6 py-4 cursor-pointer select-none" onClick={() => setOpenHTTP(o => !o)}>
                        <div className="font-semibold text-gray-900">HTTP requests seem to be working as expected</div>
                        <div className="flex items-center gap-2">
                          <span className="bg-gray-100 border border-gray-300 text-gray-900 text-xs font-semibold px-3 py-1 rounded">Performance</span>
                          <button className="ml-2" aria-label="Toggle details">
                            <svg className={`w-5 h-5 transition-transform ${openHTTP ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                            </svg>
                          </button>
                        </div>
                      </div>
                      {openHTTP && (
                        <div className="px-6 pb-6 text-gray-800 text-sm">
                          Scheduled events are what periodically looks for updates to plugins, themes and WordPress itself. It is also what makes sure scheduled posts are published on time. It may also be used by various plugins to make sure that planned actions are executed.
                        </div>
                      )}
                    </div>

                    {/* 7. REST API Passed Test */}
                    <div className="bg-white border border-gray-300 rounded">
                      <div className="flex items-center justify-between px-6 py-4 cursor-pointer select-none" onClick={() => setOpenREST(o => !o)}>
                        <div className="font-semibold text-gray-900">The REST API is available</div>
                        <div className="flex items-center gap-2">
                          <span className="bg-gray-100 border border-gray-300 text-gray-900 text-xs font-semibold px-3 py-1 rounded">Performance</span>
                          <button className="ml-2" aria-label="Toggle details">
                            <svg className={`w-5 h-5 transition-transform ${openREST ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                            </svg>
                          </button>
                        </div>
                      </div>
                      {openREST && (
                        <div className="px-6 pb-6 text-gray-800 text-sm">
                          The REST API is one way that WordPress and other applications communicate with the server. For example, the block editor screen relies on the REST API to display and save your posts and pages.
                        </div>
                      )}
                    </div>

                    {/* 5. Scheduled Events Passed Test */}
                    <div className="bg-white border border-gray-300 rounded">
                      <div className="flex items-center justify-between px-6 py-4 cursor-pointer select-none" onClick={() => setOpenScheduled(o => !o)}>
                        <div className="font-semibold text-gray-900">Scheduled events are running</div>
                        <div className="flex items-center gap-2">
                          <span className="bg-gray-100 border border-gray-300 text-gray-900 text-xs font-semibold px-3 py-1 rounded">Performance</span>
                          <button className="ml-2" aria-label="Toggle details">
                            <svg className={`w-5 h-5 transition-transform ${openScheduled ? '' : 'rotate-180'}`} fill="none" stroke="currentColor" strokeWidth={2} viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                            </svg>
                          </button>
                        </div>
                      </div>
                      {openScheduled && (
                        <div className="px-6 pb-6 text-gray-800 text-sm">
                          WordPress scheduled events (WP-Cron) are running as expected. This ensures tasks like publishing scheduled posts and checking for updates are working.
                        </div>
                      )}
                    </div>


                      {/* Other passed tests would follow the same pattern */}
                      {/* ... */}
                    </div>
                  )}
                </div>
              </div>
            </>
          ) : (
            // Info tab content
            <div className="flex flex-col items-center">
              <div className="w-full items-center flex flex-col max-w-3xl bg-[#f6f7f7] rounded  p-8 mb-8">
                <div className="text-xl font-semibold text-gray-900 mb-2">Site Health Info</div>
                <div className="text-gray-700 mb-2">
                  This page can show you every detail about the configuration of your WordPress website. For any improvements that could be made, see the{' '}
                  <a href="#" className="text-[#2271b1] underline hover:text-[#135e96]">Site Health Status</a> page.
                </div>
                <div className="text-gray-700 mb-6">
                  If you want to export a handy list of all the information on this page, you can use the button below to copy it to the clipboard. You can then paste it in a text file and save it to your device, or paste it in an email exchange with a support engineer or theme/plugin developer for example.
                </div>
                <button
                  className="border border-[#2271b1] text-[#2271b1] px-4 py-2 rounded hover:bg-blue-50 text-base font-medium"
                  onClick={handleCopy}
                  type="button"
                >
                  Copy site info to clipboard
                </button>

                {/* WordPress Info Section */}
                {/* 1. Wordpress Section (collapsible) */}
                <div className="border-1 mt-10 border-gray-200">
                  <div>
                    <div className="bg-white  rounded ">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>Wordpress</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle Wordpress info"
                          onClick={() => setWpInfoOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${wpInfoOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {wpInfoOpen && (
                        <table className=" m-3 mb-3 !text-sm border border-gray-300">
                          <tbody>
                            {Object.entries(siteInfo).map(([key, value], idx) => (
                              <tr key={key} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50 "}>
                                <td className="px-6 py-2 font-medium text-gray-700 w-1/2">{key}</td>
                                <td className="px-6 py-2 text-gray-900">{value}</td>
                              </tr>
                            ))}
                          </tbody>
                        </table>
                      )}
                    </div>
                  </div>

                  {/* 2. Directories and Sizes Section */}
                  <div>
                    <div className="bg-white  rounded w-full">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>Directories and Sizes</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle Directories and Sizes info"
                          onClick={() => setDirInfoOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${dirInfoOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {dirInfoOpen && (
                        <table className=" m-3 !text-sm border border-gray-300">
                          <tbody>
                            {Object.entries(directoriesInfo).map(([key, value], idx) => (
                              <tr key={key} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                <td className="px-6 py-2 font-medium text-gray-700 w-1/2">{key}</td>
                                <td className="px-6 py-2 text-gray-900">{value}</td>
                              </tr>
                            ))}
                          </tbody>
                        </table>
                      )}
                    </div>
                  </div>
                  {/* 3. WordPress Info Section */}
                  <div >
                    <div className="bg-white  rounded w-full">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>WordPress Info</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle WordPress Info section"
                          onClick={() => setThemeInfoOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${themeInfoOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {themeInfoOpen && (
                        <div className="overflow-x-auto">
                          <table className="m-3 !text-sm border border-gray-300 min-w-[350px]">
                            <tbody>
                              {Object.entries(activeThemeInfo).map(([key, value], idx) => (
                                <tr key={key} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                  <td className="px-6 py-2 font-medium text-gray-700 w-1/2">{key}</td>
                                  <td className="px-6 py-2 text-gray-900">{value}</td>
                                </tr>
                              ))}
                            </tbody>
                          </table>
                        </div>
                      )}
                    </div>
                  </div>


                  {/* 4. Inactive Themes Section */}
                  <div >
                    <div className="bg-white  rounded w-full">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>Inactive Themes</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle Inactive Themes section"
                          onClick={() => setInactiveThemesOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${inactiveThemesOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {inactiveThemesOpen && (
                        <div className="overflow-x-auto">
                          <table className="m-3 text-sm border border-gray-300 min-w-[350px]">
                            <tbody>
                              {inactiveThemes.map((theme, idx) => (
                                <tr key={theme.name} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                  <td className="px-6 py-2 font-medium text-gray-700 w-1/2">{theme.name}</td>
                                  <td className="px-6 py-2 text-gray-900">{theme.details}</td>
                                </tr>
                              ))}
                            </tbody>
                          </table>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* 5. Active Plugins Section */}
                  <div >
                    <div className="bg-white rounded ">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>Active Plugins</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle Active Plugins section"
                          onClick={() => setActivePluginsOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${activePluginsOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {activePluginsOpen && (
                        <div className="overflow-x-auto">
                          <table className="m-3 text-sm border border-gray-300 min-w-[350px]">
                            <tbody>
                              {activePlugins.map((plugin, idx) => (
                                <tr key={plugin.name} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                  <td className="px-6 py-2 font-medium text-gray-700 w-1/2">{plugin.name}</td>
                                  <td className="px-6 py-2 text-gray-900" dangerouslySetInnerHTML={{ __html: plugin.details }} />
                                </tr>
                              ))}
                            </tbody>
                          </table>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* 6. Inactive Plugins Section */}
                  <div >
                    <div className="bg-white rounded w-full">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>Inactive Plugins</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle Inactive Plugins section"
                          onClick={() => setInactivePluginsOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${inactivePluginsOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {inactivePluginsOpen && (
                        <div className="overflow-x-auto">
                          <table className="m-3 text-sm border border-gray-300 min-w-[350px]">
                            <tbody>
                              {inactivePlugins.map((plugin, idx) => (
                                <tr key={plugin.name} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                  <td className="px-6 py-2 font-medium text-gray-700 w-full">{plugin.name}</td>
                                  <td className="px-6 py-2 text-gray-900" dangerouslySetInnerHTML={{ __html: plugin.details }} />
                                </tr>
                              ))}
                            </tbody>
                          </table>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* 7. Media Handling Section */}
                  <div >
                    <div className="bg-white rounded w-full">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>Media Handling</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle Media Handling section"
                          onClick={() => setMediaHandlingOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${mediaHandlingOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {mediaHandlingOpen && (
                        <div className="overflow-x-auto">
                          <table className="w-full m-3 text-sm border border-gray-300 min-w-[350px]">
                            <tbody>
                              {Object.entries(mediaHandling).map(([key, value], idx) => (
                                <tr key={key} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                  <td className="px-6 py-2 font-medium text-gray-700 w-1/2">{key}</td>
                                  <td className="px-6 py-2 w-1/2 text-gray-900">{value}</td>
                                </tr>
                              ))}
                            </tbody>
                          </table>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* 8. Server Info Section */}
                  <div >
                    <div className="bg-white  rounded w-full">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>Server Info</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle Server Info section"
                          onClick={() => setServerInfoOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${serverInfoOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {serverInfoOpen && (
                        <div className="overflow-x-auto">
                          <table className="m-3 text-sm border border-gray-300 min-w-[350px]">
                            <tbody>
                              {Object.entries(serverInfo).map(([key, value], idx) => (
                                <tr key={key} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                  <td className="px-6 py-2 font-medium text-gray-700 w-1/2">{key}</td>
                                  <td className="px-6 py-2 text-gray-900">{value}</td>
                                </tr>
                              ))}
                            </tbody>
                          </table>
                        </div>
                      )}
                    </div>
                  </div>

                  <div >
                    <div className="bg-white rounded w-full">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>Database</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle Database info"
                          onClick={() => setDatabaseInfoOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${databaseInfoOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {databaseInfoOpen && (
                        <div className="overflow-x-auto">
                          <table className="m-3 text-sm border border-gray-300 min-w-[350px]">
                            <tbody>
                              {Object.entries(databaseInfo).map(([key, value], idx) => (
                                <tr key={key} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                  <td className="px-6 py-2 font-medium text-gray-700 w-full">{key}</td>
                                  <td className="px-6 py-2 text-gray-900">{value}</td>
                                </tr>
                              ))}
                            </tbody>
                          </table>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* WordPress Constants Section */}
                  <div>
                    <div className="bg-white  rounded w-full">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>WordPress Constants</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle WordPress Constants info"
                          onClick={() => setWpConstantsOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${wpConstantsOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {wpConstantsOpen && (
                        <>
                          <div className="px-6 py-3 m-3 text-gray-700 text-sm border-b border-gray-200">
                            These settings alter where and how parts of WordPress are loaded.
                          </div>
                          <div className="overflow-x-auto">
                            <table className="text-sm border border-gray-300 min-w-[350px]">
                              <tbody>
                                {Object.entries(wpConstants).map(([key, value], idx) => (
                                  <tr key={key} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                    <td className="px-6 py-2 font-medium text-gray-700 w-1/2">{key}</td>
                                    <td className="px-6 py-2 text-gray-900">{value}</td>
                                  </tr>
                                ))}
                              </tbody>
                            </table>
                          </div>
                        </>
                      )}
                    </div>
                  </div>


                  {/* Filesystem Permissions Section */}
                  <div >
                    <div className="bg-white rounded w-full">
                      <div className="px-6 py-3 border-b border-gray-200 font-semibold text-lg flex items-center justify-between">
                        <span>Filesystem Permissions</span>
                        <button
                          className="ml-2 focus:outline-none"
                          aria-label="Toggle Filesystem Permissions info"
                          onClick={() => setFsPermissionsOpen(o => !o)}
                          type="button"
                        >
                          <svg className={`w-5 h-5 transition-transform ${fsPermissionsOpen ? '' : 'rotate-180'}`} fill="none" stroke="#374151" strokeWidth={2} viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                          </svg>
                        </button>
                      </div>
                      {fsPermissionsOpen && (
                        <>
                          <div className="px-6 py-3 m-3 text-gray-700 text-sm border-b border-gray-200">
                            Shows whether WordPress is able to write to the directories it needs access to.
                          </div>
                          <div className="overflow-x-auto">
                            <table className="text-sm border border-gray-300 min-w-[350px]">
                              <tbody>
                                {fsPermissions.map((row, idx) => (
                                  <tr key={row.dir} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                                    <td className="px-6 py-2 font-medium text-gray-700 w-1/2">{row.dir}</td>
                                    <td className="px-6 py-2 text-gray-900">{row.status}</td>
                                  </tr>
                                ))}
                              </tbody>
                            </table>
                          </div>
                        </>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}
        </main>
      </div>
    </div>
  );
}